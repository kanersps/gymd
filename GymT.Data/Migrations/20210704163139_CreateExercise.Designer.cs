// <auto-generated />
using System;
using GymT.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GymT.Data.Migrations
{
    [DbContext(typeof(GymTDbContext))]
    [Migration("20210704163139_CreateExercise")]
    partial class CreateExercise
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0-preview.4.21253.1");

            modelBuilder.Entity("GymT.Common.Accounts.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nickname")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("GymT.Common.Exercises.Exercise", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("AuthorId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("EquipmentId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("EquipmentId");

                    b.ToTable("Exercises");
                });

            modelBuilder.Entity("GymT.Common.Exercises.ExerciseEquipment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("ExerciseEquipment");
                });

            modelBuilder.Entity("GymT.Common.Exercises.ExerciseMove", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("DefaultAmount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DefaultRepetitions")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("ExerciseId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Instructions")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.Property<int>("QuantityType")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ExerciseId");

                    b.ToTable("ExerciseMove");
                });

            modelBuilder.Entity("GymT.Common.Exercises.ExerciseMoveUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("AccountId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Amount")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("ExerciseMoveId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Repetitions")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("ExerciseMoveId");

                    b.ToTable("ExerciseMoveUser");
                });

            modelBuilder.Entity("GymT.Common.Exercises.Exercise", b =>
                {
                    b.HasOne("GymT.Common.Accounts.Account", "Author")
                        .WithMany("Exercises")
                        .HasForeignKey("AuthorId");

                    b.HasOne("GymT.Common.Exercises.ExerciseEquipment", "Equipment")
                        .WithMany("Exercise")
                        .HasForeignKey("EquipmentId");

                    b.Navigation("Author");

                    b.Navigation("Equipment");
                });

            modelBuilder.Entity("GymT.Common.Exercises.ExerciseMove", b =>
                {
                    b.HasOne("GymT.Common.Exercises.Exercise", "Exercise")
                        .WithMany("Moves")
                        .HasForeignKey("ExerciseId");

                    b.Navigation("Exercise");
                });

            modelBuilder.Entity("GymT.Common.Exercises.ExerciseMoveUser", b =>
                {
                    b.HasOne("GymT.Common.Accounts.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId");

                    b.HasOne("GymT.Common.Exercises.ExerciseMove", "ExerciseMove")
                        .WithMany("ExerciseMoveUsers")
                        .HasForeignKey("ExerciseMoveId");

                    b.Navigation("Account");

                    b.Navigation("ExerciseMove");
                });

            modelBuilder.Entity("GymT.Common.Accounts.Account", b =>
                {
                    b.Navigation("Exercises");
                });

            modelBuilder.Entity("GymT.Common.Exercises.Exercise", b =>
                {
                    b.Navigation("Moves");
                });

            modelBuilder.Entity("GymT.Common.Exercises.ExerciseEquipment", b =>
                {
                    b.Navigation("Exercise");
                });

            modelBuilder.Entity("GymT.Common.Exercises.ExerciseMove", b =>
                {
                    b.Navigation("ExerciseMoveUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
